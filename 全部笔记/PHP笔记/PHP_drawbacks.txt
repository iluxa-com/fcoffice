------------------------------------------------------------------------------
恼火的SQL语句 //这样写
$query="SELECT * FROM `users` WHERE `user_name`='{$name}' and `user_password`='{$psw}'";
------------------------------------------------------------------------------

漏写收括号
漏写$

漏写<?php ?> 会只输出PHP语句
heredoc中的结束字符必须在行的开头,前面不能有空格或者其他标记符。


写SQL语句与用户提交数据结合时注意事项：

1.全局变量GET和POST应该先赋值给新变量名。清晰些
2.在写SQL时，新变量要用''包起来。
例如：	
$usr=$_POST['username'];
$pswd=$_POST['pswd'];		
$sql = "SELECT * FROM `users` WHERE `username` ='$usr' AND `pswd` ='$pswd'";

恼火的SQL语句 ！


下面一种从别人那里看到的写法
$sql= mysql_query("select * from admin where adminname='".$adminname."'and adminpass='".$adminpass."'"); 
--------------------------------------------------------------------------
另一写法测试了
$query="SELECT * FROM `users` WHERE `user_name`='{$name}' and `user_password`='{$psw}'";
------------------------------------------------------------------------------


Ajax中文乱码，在PHP里把编码设置成utf-8,因为AJAX只能以utf-8接收内容。
用iconv或者iconv_set_encoding设置

bool iconv_set_encoding ( string type, string charset )//成功返回true
iconv_set_encoding("internal_encoding", "UTF-8");

string iconv ( string in_charset, string out_charset, string str )//返回string
iconv("ISO-8859-1", "UTF-8", "This is a test.");
 ---------------------------------------------------------------------------
静态方法可以直接用类名::静态方法来访问，无需实例化。
但是静态方法不能使用$this->foo 来使用属性。

以下的做法是错误的：
class test {
public $foo ;
static function testmethod(){
   	return $this->foo="hello world";
	//只能这样使用 $foo=....;好像$foo与public $foo无关。在方法外的赋值均无效！无论是公共        //还是私有。

 }
}
-----------------------------------------------------------------------------
protected 注意拼写！！！CT NOT ST
------------------------------------------------------------------------------
while循环里读取文件或者文件内容时的指针，如果把$file=$file = readdir($dh)放在while外，就不会移动指针，会成为死循环。

还有一点，这个循环是先取得文件名，然后再判断是否到达指针结尾。如果直接($file = readdir($dh))的外括号去掉，则会将$file隐式转换，变成判断是否结尾而不是取得文件名。而且要使用!==判断,以防存在文件名为0的文件却不能取得。

while (($file = readdir($dh)) !== false)

------------------------------------------------------------------------------
scandir返回数组，第一个参数是文件夹路径，不是指针，第二个是排序
-------------------------------------------------------------------------------
伪类
$dirClass=dir("c:/"); //并不需要new关键字

-------------------------------------------------------------------------------
filetype()参数是绝对路径。

可以用dir的path属性 和dir的read方法连接组成绝对路径
filetype($dir->path.$dir->read());
-------------------------------------------------------------------------------

  //返回文件绝对路径
  $path3=$_SERVER['SCRIPT_FILENAME'];

------------------------------------------------------------------------------
另一种读取文件内容的方法
可以读取二进制的文件:

$data = implode('', file($file)); 


注： file() 将文件作为一个数组返回。数组中的每个单元都是文件中相应的一行，包括换行符在内。如果失败 file() 返回 FALSE。 

------------------------------------------------------------------------------

使用file_put_contents函数写入:
//不用文件指针，PHP5+可用，低版本还是用fwrite。大概跟file_get_contents($file)一起加入的

<?php 
$file = 'dirlist.php'; 
$date="lll";
file_put_contents ($file, $data); 
?>  
------------------------------------------------------------------------------
file_get_contents($file)
如果要打开有特殊字符的 URL （比如说有空格），就需要使用 urlencode() 进行 URL 编码。 
------------------------------------------------------------------------------
date_default_timezone_set('Asia/Shanghai');  //设置时区

------------------------------------------------------------------------------
在浏览器输入以下内容可以获取本地用户所有的COOKIE信息！！！可怕
javascript:void(alert(document.cookie))
------------------------------------------------------------------------------
discuz要采用二进制方式上传。。。


------------------------------------------------------------------------------